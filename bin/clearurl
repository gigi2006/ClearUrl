#!/usr/bin/env python3
# coding=UTF-8

import sys
import argparse
import json
from clearurl import Filter, __version__
from clearurl.updater import update_adguard_rules

def main():
    parser = argparse.ArgumentParser(description="ClearURL - Entferne Tracking-Parameter aus URLs")
    parser.add_argument("url", nargs="?", help="Die zu bereinigende URL")
    parser.add_argument("-m", "--mode", choices=["rule", "auto", "full"], 
                      help="Filtermodus: 'rule' (nur Regeln), 'auto' (nur automatisch), 'full' (beides)")
    parser.add_argument("-j", "--json", action="store_true", help="Ausgabe als JSON")
    parser.add_argument("-u", "--update", action="store_true", help="AdGuard-Regeln aktualisieren")
    parser.add_argument("-v", "--version", action="store_true", help="Version anzeigen")
    parser.add_argument("--no-adguard", action="store_true", help="Keine AdGuard-Regeln verwenden")
    parser.add_argument("--no-auto-update", action="store_true", help="Keine automatische Aktualisierung der AdGuard-Regeln")
    parser.add_argument("--no-self-study", action="store_true", help="Selbstlernfunktion deaktivieren")
    
    args = parser.parse_args()
    
    # Version anzeigen
    if args.version:
        print(f"ClearURL v{__version__}")
        return 0
        
    # AdGuard-Regeln aktualisieren
    if args.update:
        success = update_adguard_rules(force=True)
        if success:
            print("AdGuard-Regeln wurden erfolgreich aktualisiert.")
        else:
            print("Fehler beim Aktualisieren der AdGuard-Regeln.")
        return 0
        
    # URL bereinigen
    if args.url:
        filter = Filter(
            self_study=not args.no_self_study,
            use_adguard=not args.no_adguard,
            auto_update=not args.no_auto_update
        )
        
        cleaned_url = filter.filter_url(args.url, mode=args.mode)
        
        if args.json:
            result = {
                "original_url": args.url,
                "cleaned_url": cleaned_url,
                "was_cleaned": cleaned_url != args.url
            }
            print(json.dumps(result, ensure_ascii=False))
        else:
            print(cleaned_url)
        
        return 0
    else:
        parser.print_help()
        return 1

if __name__ == "__main__":
    sys.exit(main())